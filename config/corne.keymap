/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE    0
#define NUMBERS 1
#define SYMBOLS 2
#define NAV     3
#define ADJUST  4

#define EMOJI LC(LG(SPACE))
#define HYPER LC(LA(LS(LGUI)))
#define MEH LC(LA(LSHIFT))

#define OP_AUTOFILL LG(BACKSLASH)
#define OP_QUICKACC LS(LG(BACKSLASH))

#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35
#define THUMBS 36 37 38 39 40 41

&mt {
    quick-tap-ms = <180>;
};

&lt {
    quick-tap-ms = <180>;
};

/ {
        behaviors {
            bhm: balanced_homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                bindings = <&kp>, <&kp>;
                flavor = "balanced";
                tapping-term-ms = <165>;
                quick-tap-ms = <145>;
            };
            // https://github.com/urob/zmk-config#timeless-homerow-mods
            thml: timeless_homerow_mods_left {
                compatible = "zmk,behavior-hold-tap";
                label = "TIMELESS_HOMEROW_MODS_LEFT";
                #binding-cells = <2>;
                bindings = <&kp>, <&kp>;
                flavor = "balanced";
                tapping-term-ms = <280>;
                quick-tap-ms = <180>;
                require-prior-idle-ms = <100>;
                hold-trigger-key-positions = <KEYS_R THUMBS>;
                hold-trigger-on-release;
            };
            thmr: timeless_homerow_mods_right {
                compatible = "zmk,behavior-hold-tap";
                label = "TIMELESS_HOMEROW_MODS_RIGHT";
                #binding-cells = <2>;
                bindings = <&kp>, <&kp>;
                flavor = "balanced";
                tapping-term-ms = <280>;
                quick-tap-ms = <180>;
                require-prior-idle-ms = <100>;
                hold-trigger-key-positions = <KEYS_L THUMBS>;
                hold-trigger-on-release;
            };
            cmsc: comma_semicolon {
                compatible = "zmk,behavior-mod-morph";
                label = "COMMA_SEMICOLON";
                #binding-cells = <0>;
                bindings = <&kp COMMA>, <&kp SEMICOLON>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };
            dotcln: dot_colon {
                compatible = "zmk,behavior-mod-morph";
                label = "DOT_COLON";
                #binding-cells = <0>;
                bindings = <&kp DOT>, <&kp COLON>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
            };
        };

        combos {
            compatible = "zmk,combos";
            combo_caps_word {
                timeout-ms = <50>;
                layers = <BASE>;
                key-positions = <26 27>;
                bindings = <&caps_word>;
            };
            combo_emoji {
                timeout-ms = <50>;
                layers = <BASE>;
                key-positions = <32 33>;
                bindings = <&kp EMOJI>;
            };
            combo_esc {
                timeout-ms = <100>;
                layers = <BASE NUMBERS SYMBOLS NAV>;
                key-positions = <38 39>;
                bindings = <&kp ESC>;
            };
            combo_adjust {
                timeout-ms = <100>;
                layers = <BASE>;
                key-positions = <37 40>;
                bindings = <&mo ADJUST>;
            };
            combo_gui_left {
                timeout-ms = <100>;
                layers = <NAV>;
                key-positions = <2 3>;
                bindings = <&kp LG(LEFT)>;
            };
            combo_gui_right {
                timeout-ms = <100>;
                layers = <NAV>;
                key-positions = <3 4>;
                bindings = <&kp LG(RIGHT)>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                base_layer {
                        display-name = "Base";
                        bindings = <
   &none &kp Q         &kp W        &kp E          &kp R        &kp T        &kp Y        &kp U        &kp I          &kp O        &kp P           &none
   &none &thml LCTRL A &thml LALT S &thml LSHIFT D &thml LGUI F &thml MEH G &thmr MEH H  &thmr RGUI J &thmr RSHIFT K &thmr RALT L &thmr RCTRL SQT &none
   &none &kp Z         &kp X        &kp C          &kp V        &kp B        &kp N        &kp M        &cmsc          &dotcln      &kp SLASH       &none
   &none  &lt NUMBERS BSPC  &lt SYMBOLS TAB  &lt SYMBOLS SPACE  &lt NAV ENTER  &none
                        >;
                };
                numbers_layer {
                        display-name = "Numbers";
                        bindings = <
   &none &to BASE  &none     &none      &none     &none   &none   &kp N7  &kp N8  &kp N9  &none     &none
   &none &kp LCTRL &kp LALT  &kp LSHIFT &kp LGUI  &kp MEH &kp TAB &kp N4  &kp N5  &kp N6  &kp ENTER &none
   &none &kp LG(Z) &kp LG(X) &kp LG(C)  &kp LG(V) &none   &none   &kp N1  &kp N2  &kp N3  &none     &none
   &none  &kp BSPC  &kp TAB  &kp SPACE  &kp N0  &none
                        >;
                };

                symbols_layer {
                        display-name = "Symbols";
                        bindings = <
   &none &to BASE &kp LBRC &kp RBRC &kp CARET   &kp PIPE &kp AMPS &kp TILDE  &kp LT        &kp GT   &none      &none
   &none &kp EXCL &kp LPAR &kp RPAR &kp DOLLAR  &kp BSLH &kp FSLH &kp MINUS  &kp EQUAL     &kp HASH &kp GRAVE  &none
   &none &kp AT   &kp LBKT &kp RBKT &kp PERCENT &none    &none    &kp UNDER  &kp ASTERISK  &kp PLUS &kp QMARK  &none
   &none  &none &kp ESC  &kp ESC  &none  &none
                         >;
                };
                nav_layer {
                        display-name = "Nav";
                        bindings = <
   &none &to BASE &kp LA(LEFT) &kp UP   &kp LA(RIGHT) &kp HOME &none   &none           &none           &none    &none      &none
   &none &none    &kp LEFT     &kp DOWN &kp RIGHT     &kp END  &kp MEH &kp RGUI        &kp RSHIFT      &kp RALT &kp RCTRL  &none
   &none &none    &kp PG_UP    &none    &kp PG_DN     &none    &none   &kp OP_AUTOFILL &kp OP_QUICKACC &none    &none      &none
   &none  &kp DEL  &none  &none  &none  &none
                         >;
                };
                adjust_layer {
                        display-name = "Adjust";
                        bindings = <
   &none &to BASE &to NUMBERS &to SYMBOLS &to NAV &none &bt BT_SEL 4 &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0 &none
   &none &none    &none       &none       &none   &none &none        &none        &none        &none        &none        &none
   &none &none    &none       &none       &none   &none &none        &none        &none        &none        &bt BT_CLR   &none
   &none  &none  &none  &none  &none  &none
                        >;
                };
        };
};

// vim: ft=cpp
